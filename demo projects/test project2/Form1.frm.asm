; D:\DEVELOPMENT\release\demo projects\test project2\Form1.frm.asm
; Generated by zConvert FRM2ASM 0.10
; Visit http://KomA.gulli.com for Updates and newer Versions!
; Please send bug reports (with FRM file) to bazik@x-mail.net

        .486
        .model flat, stdcall
        option casemap :none

        include \masm32\include\windows.inc
        include \masm32\include\user32.inc
        include \masm32\include\kernel32.inc
        include \masm32\include\gdi32.inc

        includelib \masm32\lib\user32.lib
        includelib \masm32\lib\kernel32.lib
        includelib \masm32\lib\gdi32.lib



		LISTBOX1		equ 1
		BUTTON1		equ 2
		BUTTON2		equ 3
		BUTTON3		equ 4
		BUTTON4		equ 5
		BUTTON5		equ 6
		TEXTBOX1		equ 7
		TEXTBOX2		equ 8
.data


		szClassName		db "Form1", 0

		wc		WNDCLASSEX <sizeof wc, CS_HREDRAW \
			or CS_VREDRAW or CS_BYTEALIGNWINDOW, \
			offset WndProc, 0, 0, 400000h, \
			0, 0, COLOR_BTNFACE + 1, 0, \
			offset szClassName, 0>

		szListBoxClass		db "LISTBOX", 0
		szButtonClass		db "BUTTON", 0
		szTextBoxClass		db "EDIT", 0


		szForm1		db "Form1", 0
		szCommand5		db "Command5", 0
		szCommand4		db "Command4", 0
		szCommand3		db "Command3", 0
		szCommand2		db "Command2", 0
		szCommand1		db "Command1", 0
		szText2		db "Text2", 0
		szText1		db "Text1", 0

.data?
		hWnd0001		 dd ?
		msg		MSG <?>
		hFont		dd ?
		hListBox0001		 dd ?
		hButton0001		 dd ?
		hButton0002		 dd ?
		hButton0003		 dd ?
		hButton0004		 dd ?
		hButton0005		 dd ?
		hTextBox0001		 dd ?
		hTextBox0002		 dd ?


      .code

  start:

      call WinMain
      invoke ExitProcess, eax

  WinMain proc
      mov wc.hIcon, 0
      invoke LoadCursor, 0, IDC_ARROW
      mov wc.hCursor, eax
      invoke RegisterClassEx, addr wc
      invoke GetSystemMetrics, SM_CXSCREEN
      mov esi,eax
      invoke GetSystemMetrics, SM_CYSCREEN
      shr esi, 1
      shr eax, 1
      sub eax, 619/2
      sub esi, 487/2

      invoke CreateWindowEx, WS_EX_TOPMOST,
                             addr szClassName,
                             addr szForm1,
                             WS_CAPTION or WS_MINIMIZEBOX or WS_SYSMENU or WS_VISIBLE,
                             esi, eax, 619, 487, 0, 0, 400000h, 0
      mov hWnd0001, eax
      invoke ShowWindow, hWnd0001, SW_SHOWNORMAL
      invoke UpdateWindow, hWnd0001
      mov esi, offset msg
   @@:
      invoke GetMessage, esi, 0, 0, 0
      or eax, eax
      je @F
      invoke TranslateMessage, esi
      invoke DispatchMessage, esi
      jmp @B
   @@:
      mov eax, msg.wParam
      ret
  WinMain endp

  WndProc proc hWin :DWORD,uMsg :DWORD, wParam :DWORD, lParam :DWORD

     .if uMsg == WM_CREATE
        invoke GetStockObject, DEFAULT_GUI_FONT
        mov hFont, eax

		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szListBoxClass, 0, WS_CHILD or WS_VISIBLE, 448, 296, 153, 121, hWin, LISTBOX1, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szButtonClass, addr szCommand5, WS_CHILD or WS_VISIBLE, 456, 232, 145, 49, hWin, BUTTON1, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szButtonClass, addr szCommand4, WS_CHILD or WS_VISIBLE, 456, 176, 145, 49, hWin, BUTTON2, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szButtonClass, addr szCommand3, WS_CHILD or WS_VISIBLE, 456, 120, 145, 49, hWin, BUTTON3, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szButtonClass, addr szCommand2, WS_CHILD or WS_VISIBLE, 456, 64, 145, 49, hWin, BUTTON4, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szButtonClass, addr szCommand1, WS_CHILD or WS_VISIBLE, 456, 16, 145, 41, hWin, BUTTON5, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText2, WS_CHILD or WS_VISIBLE, 16, 16, 425, 401, hWin, TEXTBOX1, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText1, WS_CHILD or WS_VISIBLE, 16, 424, 585, 25, hWin, TEXTBOX2, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0

    .elseif uMsg == WM_DESTROY

        invoke PostQuitMessage, 0
        xor eax, eax
        ret

    .endif

    invoke DefWindowProc, hWin, uMsg, wParam, lParam

    ret

WndProc endp

end start
