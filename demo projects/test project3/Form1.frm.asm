; D:\DEVELOPMENT\release\demo projects\test project3\Form1.frm.asm
; Generated by zConvert FRM2ASM 0.10
; Visit http://KomA.gulli.com for Updates and newer Versions!
; Please send bug reports (with FRM file) to bazik@x-mail.net

        .486
        .model flat, stdcall
        option casemap :none

        include \masm32\include\windows.inc
        include \masm32\include\user32.inc
        include \masm32\include\kernel32.inc
        include \masm32\include\gdi32.inc

        includelib \masm32\lib\user32.lib
        includelib \masm32\lib\kernel32.lib
        includelib \masm32\lib\gdi32.lib



		BUTTON1		equ 1
		BUTTON2		equ 2
		TEXTBOX1		equ 3
		TEXTBOX2		equ 4
		TEXTBOX3		equ 5
		TEXTBOX4		equ 6
		TEXTBOX5		equ 7
		TEXTBOX6		equ 8
		TEXTBOX7		equ 9
		TEXTBOX8		equ 10
		TEXTBOX9		equ 11
		LABEL1		equ 12
		LABEL2		equ 13
		LABEL3		equ 14
		LABEL4		equ 15
		LABEL5		equ 16
		LABEL6		equ 17
		LABEL7		equ 18
		LABEL8		equ 19
		LABEL9		equ 20
		LABEL10		equ 21
.data


		szClassName		db "Form1", 0

		wc		WNDCLASSEX <sizeof wc, CS_HREDRAW \
			or CS_VREDRAW or CS_BYTEALIGNWINDOW, \
			offset WndProc, 0, 0, 400000h, \
			0, 0, COLOR_BTNFACE + 1, 0, \
			offset szClassName, 0>

		szButtonClass		db "BUTTON", 0
		szTextBoxClass		db "EDIT", 0
		szLabelClass		db "STATIC", 0


		szForm1		db "Form1", 0
		szCommand2		db "Do this", 0
		szCommand1		db "Do that", 0
		szText9		db "Text9", 0
		szText8		db "Text8", 0
		szText7		db "Text7", 0
		szText6		db "Text6", 0
		szText5		db "Text5", 0
		szText4		db "Text4", 0
		szText3		db "Text3", 0
		szText2		db "Text2", 0
		szText1		db "Text1", 0
		szLabel10		db "Coded by bAZiK [KomA]", 0
		szLabel9		db "Label9", 0
		szLabel8		db "Label8", 0
		szLabel7		db "Label7", 0
		szLabel6		db "Label6", 0
		szLabel5		db "Label5", 0
		szLabel4		db "Label4", 0
		szLabel3		db "Label3", 0
		szLabel2		db "Label2", 0
		szLabel1		db "Label1", 0

.data?
		hWnd0001		 dd ?
		msg		MSG <?>
		hFont		dd ?
		hButton0001		 dd ?
		hButton0002		 dd ?
		hTextBox0001		 dd ?
		hTextBox0002		 dd ?
		hTextBox0003		 dd ?
		hTextBox0004		 dd ?
		hTextBox0005		 dd ?
		hTextBox0006		 dd ?
		hTextBox0007		 dd ?
		hTextBox0008		 dd ?
		hTextBox0009		 dd ?
		hLabel0001		 dd ?
		hLabel0002		 dd ?
		hLabel0003		 dd ?
		hLabel0004		 dd ?
		hLabel0005		 dd ?
		hLabel0006		 dd ?
		hLabel0007		 dd ?
		hLabel0008		 dd ?
		hLabel0009		 dd ?
		hLabel0010		 dd ?


      .code

  start:

      call WinMain
      invoke ExitProcess, eax

  WinMain proc
      mov wc.hIcon, 0
      invoke LoadCursor, 0, IDC_ARROW
      mov wc.hCursor, eax
      invoke RegisterClassEx, addr wc
      invoke GetSystemMetrics, SM_CXSCREEN
      mov esi,eax
      invoke GetSystemMetrics, SM_CYSCREEN
      shr esi, 1
      shr eax, 1
      sub eax, 426/2
      sub esi, 288/2

      invoke CreateWindowEx, WS_EX_TOPMOST,
                             addr szClassName,
                             addr szForm1,
                             WS_CAPTION or WS_MINIMIZEBOX or WS_SYSMENU or WS_VISIBLE,
                             esi, eax, 426, 288, 0, 0, 400000h, 0
      mov hWnd0001, eax
      invoke ShowWindow, hWnd0001, SW_SHOWNORMAL
      invoke UpdateWindow, hWnd0001
      mov esi, offset msg
   @@:
      invoke GetMessage, esi, 0, 0, 0
      or eax, eax
      je @F
      invoke TranslateMessage, esi
      invoke DispatchMessage, esi
      jmp @B
   @@:
      mov eax, msg.wParam
      ret
  WinMain endp

  WndProc proc hWin :DWORD,uMsg :DWORD, wParam :DWORD, lParam :DWORD

     .if uMsg == WM_CREATE
        invoke GetStockObject, DEFAULT_GUI_FONT
        mov hFont, eax

		invoke CreateWindowEx, 0, addr szButtonClass, addr szCommand2, WS_CHILD or WS_VISIBLE, 200, 224, 105, 25, hWin, BUTTON1, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szButtonClass, addr szCommand1, WS_CHILD or WS_VISIBLE, 312, 224, 105, 25, hWin, BUTTON2, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText9, WS_CHILD or WS_VISIBLE, 136, 200, 281, 19, hWin, TEXTBOX1, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText8, WS_CHILD or WS_VISIBLE, 136, 176, 281, 19, hWin, TEXTBOX2, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText7, WS_CHILD or WS_VISIBLE, 136, 152, 281, 19, hWin, TEXTBOX3, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText6, WS_CHILD or WS_VISIBLE, 136, 128, 281, 19, hWin, TEXTBOX4, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText5, WS_CHILD or WS_VISIBLE, 136, 104, 281, 19, hWin, TEXTBOX5, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText4, WS_CHILD or WS_VISIBLE, 136, 80, 281, 19, hWin, TEXTBOX6, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText3, WS_CHILD or WS_VISIBLE, 136, 56, 281, 19, hWin, TEXTBOX7, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText2, WS_CHILD or WS_VISIBLE, 136, 32, 281, 19, hWin, TEXTBOX8, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, WS_EX_CLIENTEDGE, addr szTextBoxClass, addr szText1, WS_CHILD or WS_VISIBLE, 136, 8, 281, 19, hWin, TEXTBOX9, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel10, WS_CHILD or WS_VISIBLE, 8, 224, 185, 25, hWin, LABEL1, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel9, WS_CHILD or WS_VISIBLE, 8, 200, 113, 17, hWin, LABEL2, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel8, WS_CHILD or WS_VISIBLE, 8, 176, 113, 17, hWin, LABEL3, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel7, WS_CHILD or WS_VISIBLE, 8, 152, 113, 17, hWin, LABEL4, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel6, WS_CHILD or WS_VISIBLE, 8, 128, 113, 17, hWin, LABEL5, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel5, WS_CHILD or WS_VISIBLE, 8, 104, 113, 17, hWin, LABEL6, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel4, WS_CHILD or WS_VISIBLE, 8, 80, 113, 17, hWin, LABEL7, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel3, WS_CHILD or WS_VISIBLE, 8, 56, 113, 17, hWin, LABEL8, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel2, WS_CHILD or WS_VISIBLE, 8, 32, 113, 17, hWin, LABEL9, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0
		invoke CreateWindowEx, 0, addr szLabelClass, addr szLabel1, WS_CHILD or WS_VISIBLE, 8, 8, 113, 17, hWin, LABEL10, 400000h, 0
		invoke SendMessage, eax, WM_SETFONT, hFont, 0

    .elseif uMsg == WM_DESTROY

        invoke PostQuitMessage, 0
        xor eax, eax
        ret

    .endif

    invoke DefWindowProc, hWin, uMsg, wParam, lParam

    ret

WndProc endp

end start
